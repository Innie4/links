{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext(undefined);export const ThemeProvider=_ref=>{let{children}=_ref;const[theme,setTheme]=useState('light');useEffect(()=>{const stored=localStorage.getItem('theme');if(stored)setTheme(stored);},[]);useEffect(()=>{localStorage.setItem('theme',theme);document.documentElement.className=theme==='dark'?'dark':'';},[theme]);return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,setTheme},children:children});};export const useTheme=()=>{const context=useContext(ThemeContext);if(!context)throw new Error('useTheme must be used within a ThemeProvider');return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","undefined","ThemeProvider","_ref","children","theme","setTheme","stored","localStorage","getItem","setItem","document","documentElement","className","Provider","value","useTheme","context","Error"],"sources":["C:/Users/Inimfon Udoh/links-site/src/components/theme-provider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface ThemeContextType {\n  theme: string;\n  setTheme: (theme: string) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\n  const [theme, setTheme] = useState('light');\n\n  useEffect(() => {\n    const stored = localStorage.getItem('theme');\n    if (stored) setTheme(stored);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n    document.documentElement.className = theme === 'dark' ? 'dark' : '';\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) throw new Error('useTheme must be used within a ThemeProvider');\n  return context;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAOzF,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAA+BO,SAAS,CAAC,CAE3E,MAAO,MAAM,CAAAC,aAAa,CAAGC,IAAA,EAA2C,IAA1C,CAAEC,QAAkC,CAAC,CAAAD,IAAA,CACjE,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,OAAO,CAAC,CAE3CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC5C,GAAIF,MAAM,CAAED,QAAQ,CAACC,MAAM,CAAC,CAC9B,CAAC,CAAE,EAAE,CAAC,CAENV,SAAS,CAAC,IAAM,CACdW,YAAY,CAACE,OAAO,CAAC,OAAO,CAAEL,KAAK,CAAC,CACpCM,QAAQ,CAACC,eAAe,CAACC,SAAS,CAAGR,KAAK,GAAK,MAAM,CAAG,MAAM,CAAG,EAAE,CACrE,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,mBACEN,IAAA,CAACC,YAAY,CAACc,QAAQ,EAACC,KAAK,CAAE,CAAEV,KAAK,CAAEC,QAAS,CAAE,CAAAF,QAAA,CAC/CA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,MAAO,MAAM,CAAAY,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGtB,UAAU,CAACK,YAAY,CAAC,CACxC,GAAI,CAACiB,OAAO,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CAC7E,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}