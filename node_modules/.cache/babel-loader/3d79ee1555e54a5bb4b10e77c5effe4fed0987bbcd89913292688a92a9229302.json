{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inimfon Udoh\\\\links-site\\\\src\\\\components\\\\language-provider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext(undefined);\nexport function LanguageProvider({\n  children\n}) {\n  _s();\n  const [language, setLanguage] = useState('en');\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      setLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(LanguageProvider, \"fVUtOCD1O58HgvMjnE8lxRQa0QA=\");\n_c = LanguageProvider;\nexport function useLanguage() {\n  _s2();\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}\n_s2(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["useState","createContext","useContext","jsxDEV","_jsxDEV","LanguageContext","undefined","LanguageProvider","children","_s","language","setLanguage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLanguage","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Inimfon Udoh/links-site/src/components/language-provider.tsx"],"sourcesContent":["\n\nimport { useState, createContext, useContext } from 'react'\n\ninterface LanguageContextType {\n  language: string\n  setLanguage: (lang: string) => void\n}\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined)\n\nexport function LanguageProvider({ children }: { children: React.ReactNode }) {\n  const [language, setLanguage] = useState('en')\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage }}>\n      {children}\n    </LanguageContext.Provider>\n  )\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext)\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider')\n  }\n  return context\n}\n"],"mappings":";;;AAEA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAO3D,MAAMC,eAAe,gBAAGJ,aAAa,CAAkCK,SAAS,CAAC;AAEjF,OAAO,SAASC,gBAAgBA,CAAC;EAAEC;AAAwC,CAAC,EAAE;EAAAC,EAAA;EAC5E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9C,oBACEI,OAAA,CAACC,eAAe,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEH,QAAQ;MAAEC;IAAY,CAAE;IAAAH,QAAA,EACxDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B;AAACR,EAAA,CAReF,gBAAgB;AAAAW,EAAA,GAAhBX,gBAAgB;AAUhC,OAAO,SAASY,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGnB,UAAU,CAACG,eAAe,CAAC;EAC3C,IAAIgB,OAAO,KAAKf,SAAS,EAAE;IACzB,MAAM,IAAIgB,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,WAAW;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}