{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inimfon Udoh\\\\links-site\\\\src\\\\components\\\\theme-provider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('light');\n  useEffect(() => {\n    const stored = localStorage.getItem('theme');\n    if (stored) setTheme(stored);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n    document.documentElement.className = theme === 'dark' ? 'dark' : '';\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"l0NnHMBAjTNA2m05PT0LPL3eOKc=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) throw new Error('useTheme must be used within a ThemeProvider');\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","undefined","ThemeProvider","children","_s","theme","setTheme","stored","localStorage","getItem","setItem","document","documentElement","className","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Inimfon Udoh/links-site/src/components/theme-provider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface ThemeContextType {\n  theme: string;\n  setTheme: (theme: string) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\n  const [theme, setTheme] = useState('light');\n\n  useEffect(() => {\n    const stored = localStorage.getItem('theme');\n    if (stored) setTheme(stored);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n    document.documentElement.className = theme === 'dark' ? 'dark' : '';\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) throw new Error('useTheme must be used within a ThemeProvider');\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOzF,MAAMC,YAAY,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAE3E,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5C,IAAIF,MAAM,EAAED,QAAQ,CAACC,MAAM,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACdW,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;IACpCM,QAAQ,CAACC,eAAe,CAACC,SAAS,GAAGR,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,EAAE;EACrE,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEN,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEV,KAAK;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAC/CA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACf,EAAA,CAlBWF,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAoB1B,OAAO,MAAMmB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAG5B,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACuB,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EAC7E,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CAJWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}